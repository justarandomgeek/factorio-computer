require("stddefs.nql")

function FINDSTART(var search, var increment)
  var found
  while found.copper-ore == 0 do
    search = search + increment
    found = scammer(search)
  end
  return search
end

function FINDEND(var search, var increment)
  var found
  found.copper-ore=1
  while found.copper-ore > 0 do
    search = search + increment
    found = scammer(search)
  end
  return search
end


function FINDCOPPER(int startx)
  var result
  var search 
  rNixie = "SEARCHING..."

  search = {signal-A=1, signal-Y = -256, signal-V=256, signal-X = startx, signal-U = startx + 32}
  search = FINDSTART(search, {signal-X=32, signal-U=32 })
  
  rNixie = { "FOUND!", signal-grey = search.signal-X, signal-white = search.signal-U}
  
  rNixie = "ISOLATING..."
  search.signal-U = search.signal-X + 1
  search = FINDSTART(search, {signal-X=1, signal-U=1})
  result.signal-X = search.signal-X
  rNixie = {"LEFT", signal-grey = result.signal-X}
  search = FINDEND(search, {signal-X=1, signal-U=1})
  result.signal-U = search.signal-X
  rNixie = {"RIGHT", signal-grey = result.signal-U}
  
  search = result + {signal-A=1, signal-Y = -256, signal-V=-256+32}

  search = FINDSTART(search,{signal-Y=32, signal-V=32 })  
  search.signal-V = search.signal-Y + 1
  search = FINDSTART(search,{signal-Y=1, signal-V=1 })
  result.signal-Y = search.signal-Y
  rNixie = {"TOP", signal-grey = result.signal-Y}

  search.signal-Y = search.signal-Y + 1
  search = FINDEND(search,{signal-Y=1, signal-V=1 })
  result.signal-V = search.signal-Y
  rNixie = {"BOTTOM", signal-grey = result.signal-V}
    
  return result
end

var @r109 rLocation

function MAIN()
  FINDCOPPER(rLocation.signal-X)
end
