program "TEST PROGRAM"
rIndex.signal-red = 50
call CLRDISP
// Print helloworld
rNixie = [helloworld]

call COLORDEMO
call CLRDISP
call MATHDEMO
{}

helloworld: "HELLO WORLD"

function CLRDISP:
  // Chear Display
  rNixie.signal-grey = 1
  rNixie.signal-grey = 1
  rNixie.signal-grey = 1
  rNixie.signal-grey = 1
  rNixie.signal-grey = 1
end


function COLORDEMO:
  // Print a color demo
  rIndex.signal-green += colors
  rNixie.signal-grey = 1
  pop 2 rNixie
  rNixie.signal-grey = 1
  pop 2 rNixie
  rNixie.signal-grey = 1
  pop 2 rNixie
  return
  colors:   { .signal-red=1 .signal-green=2 .signal-blue=4
              .signal-cyan=8 .signal-pink=16 .signal-yellow=32
            }&"COLORS"
            {.signal-red=7 .signal-green=496 .signal-blue=61440
            }&"RED GREEN   BLUE"
            {.signal-cyan=15 .signal-pink=480 .signal-yellow=258048
            }&"CYAN PINK   YELLOW"
end


function MATHDEMO:
  // nn FACTORIAL
  // nn SQUARE
  // ii NUMBER
  r1.signal-white = 1
  r1+=[number]
  r3.signal-white = 1

  while r1.signal-white < 11 //TODO: convert this to do/while?
    [500]=r1

    r2.signal-white = r1.signal-white * r1.signal-white
    r2+=[square]
    [501]=r2

    r3.signal-white = r3.signal-white * r1.signal-white
    r3+=[factorialstr]
    [502]=r3

    r1.signal-white += 1
  end
  return

  number:        "NUMBER"
  square:        "SQUARE"
  factorialstr:  "FACTORIAL"
end


// External devices
// nixies - [500] is rNixie, succesive lines above
//nixie:500@extern
//nixie1:extern
//nixie2:extern
//nixie3:extern
//nixie4:extern
// */
